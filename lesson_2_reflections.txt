git commands:
git init 			initialize Git in working directory
git status 			view status of repository
git add <file>		add file to staging area
git diff 			compare working directory to staging area
git diff --staged	compare staging area to newest commit
git reset --hard	overwrite working directory with newest commit
git checkout master	checkout back to HEAD
git commit -m "text" commit with one-line-comment instead of sublime


What happens when you initialize a repository? Why do you need to do it?

     File ".git" is created

How is the staging area different from the working directory and the repository?
What value do you think it offers?

     You can choose which file to be tracked with the staging area whereas the reasons
     for a file to be in the working directory are different ones.

How can you use the staging area to make sure you have one commit per logical
change?

	If I start to work on a file put it to staging area and then if I'm not shure see git diff

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
